name: CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        build-python: ['ON']
        build-benchmark: ['ON']
        
        include:
          - name: ubuntu-18.04-gcc-5
            os: ubuntu-18.04
            compiler: gcc
            version: 5
            build-python: ['OFF']
            build-benchmark: ['OFF']

    steps:
    - uses: actions/checkout@v2

    - name: Install pybind11
      run: |
        git clone https://github.com/pybind/pybind11.git
        cd pybind11
        git checkout v2.6.0

    - name: Set compiler version and patch C++11
      if: runner.os == 'Linux' && matrix.compiler == 'gcc' && matrix.version == '5'
      run: |
        sudo apt-get update
        sudo apt-get install -y g++-${{ matrix.version }} g++-${{ matrix.version }}-multilib
        echo "CC=gcc-${{ matrix.version }}" >> $GITHUB_ENV
        echo "CXX=g++-${{ matrix.version }}" >> $GITHUB_ENV
        sh patch-c++11.sh inplace

    - name: Configure and make
      uses: lukka/run-cmake@v3
      with:
        cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
        buildDirectory: "${{ github.workspace }}/build"
        cmakeBuildType: 'Release'
        cmakeAppendedArgs: '-DBUILD_PYTHON_MODULE=${{ matrix.build-python }} -DBUILD_EXAMPLES=ON -DBUILD_BENCHMARK=${{ matrix.build-benchmark }}'

    - name: Test
      if: matrix.os == 'ubuntu-latest'
      run: |
        ./build/example-position > /dev/null
        env CTEST_OUTPUT_ON_FAILURE=1 ./build/otg-test 5000000
